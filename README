# Introduction
Crypto is a simple encryption and decryption project that uses RSA and SHA256
algorithms to encrypt and decrypt messages. It also uses zlib to compress and
decompress messages. The tool is written in Python and is compatible with 
Python 3.10 and above.

This project is finished by sbk, zqf, and whl.

# Usage:
If you want to test this on a local machine, 
    run `python3 local_run.sh`

If you want to test this in client/server mode:
    - In the client, run `python3 client_run.sh`
    - In the server, run `python3 server_run.sh`

We use port 5001 as the default port for the server in TCP communication.
Make sure it has opened before running the script.
If you encouter the network error, maybe you can try `tcpdump -i <Network Adaptor> -w <output file>`,
and then analyze the output file in Wireshark to find the problem.

For convenience, we pass the process of generating and exchanging keys between client and server,
but we provide interface for generating keys which you can find in `sigh_hash.py` -> generateKeys().

Be careful, you should allocate enough memory for the server, because the
server will handle large files when decompressing. Otherwise, you may receive a SIGKILL 
signal like the following:
    `fish: Job 1, 'python3 decompress.py' terminated by signal SIGKILL (Forced quit)`

# Algorithms
	Hash: sha256
	Signature: rsa, 2048bits
	Compress: zlib

# File structure:
./Crypto5.2
├── acknowledge.py
├── client_receive.py
├── client_run.sh
├── client_send.py
├── compress_message_and_signature.py
├── decode_compressed_message.py
├── decompress.py
├── encode_compressed_message.py
├── extract_plaintext_and_verify_signature.py
├── generate_plaintext_and_hash.py
├── local_run.sh
├── __pycache__
│   ├── compress_message_and_signature.cpython-310.pyc
│   ├── compress_message_and_signature.cpython-311.pyc 
│   ├── extract_plaintext_and_verify_signature.cpython-310.pyc
│   ├── extract_plaintext_and_verify_signature.cpython-311.pyc
│   ├── generate_plaintext_and_hash.cpython-310.pyc    
│   ├── generate_plaintext_and_hash.cpython-311.pyc    
│   ├── sign_hash.cpython-310.pyc
│   └── sign_hash.cpython-311.pyc
├── README
├── receiver_file
│   ├── pk_receiver.pem
│   ├── pk_sender.pem
│   └── sk_receiver.pem
├── sender_file
│   ├── basical_plaintext.txt
│   ├── pk_receiver.pem
│   ├── pk_sender.pem
│   └── sk_sender.pem
├── server_receive.py
├── server_run.sh
├── server_send.py
├── sign_hash.py
├── testcases
│   └── hello.txt
└── verify_acknowledgement.py

5 directories, 33 files
